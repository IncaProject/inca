#!/usr/bin/env perl

use Inca::Reporter::SimpleUnit;
use File::Path;
use strict;
use warnings;
use Cwd;

my $reporter = new Inca::Reporter::SimpleUnit(
  name => 'cluster.admin.pacman.unit',
  version => 6,
  description => 'Sample pacman install and verify',
  unit_name => 'install_verify'
);
$reporter->processArgv(@ARGV);

my $dirPre = "/tmp/cluster.admin.pacman.unit.";
my $tmpdir = $dirPre. $$;
my $failtmpdir = $dirPre. "PID";
$ENV{'PACMAN_UNIT_HOME'} = $tmpdir;
$reporter->loggedCommand( "mkdir $tmpdir" );
$reporter->tempFile($tmpdir);
chdir("$tmpdir") ||
  $reporter->failPrintAndExit( "Unable to chdir to $failtmpdir" );
my $cache = "$tmpdir/trusted.caches";
if ( open CACHE, ">$cache" ) {
  print CACHE "http://software.teragrid.org/pacman/ctss3/pacman";
  close CACHE;
} else {
  $reporter->failPrintAndExit
    ( "Unable to create temporary file, $failtmpdir/trusted.caches" );
}
my $output = $reporter->loggedCommand( "pacman -install TeraGrid/ctss3/pacman:Pacman-unit-1.0-r1.pacman" );
if ( $? ) {
  $reporter->failPrintAndExit( "pacman -install failed: $output $!" );
}
my $verify = $reporter->loggedCommand( "pacman -verify" );
if ( $? ) {
  $reporter->failPrintAndExit( "pacman -verify failed: $verify $!" );
} elsif( $verify !~ /ok/ ) {
  $reporter->failPrintAndExit( "pacman -verify failed: $verify" );
} 
my $sum = $reporter->loggedCommand( "sum bin/unit.sh" );
if ( $? != 0 ) {
  $reporter->failPrintAndExit( "sum failed: $sum $!" );
} elsif( $sum !~ /16567\s*1/ ) {
  $reporter->failPrintAndExit( "sum failed (expected 16567  1): $sum" );
} 
$reporter->unitSuccess();
$reporter->print();
