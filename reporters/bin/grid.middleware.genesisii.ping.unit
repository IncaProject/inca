#!/usr/bin/env perl

use strict;
use warnings;
use Inca::Reporter::SimpleUnit;

my $reporter = new Inca::Reporter::SimpleUnit(
	name => 'grid.middleware.genesisii.ping.unit',
	version => 2,
	description => 'Ping GFFS containers',
	unit_name => 'gffs_ping'
);
$reporter->addArg( 'dir', 'Directory to search for containers to ping', '/resources/xsede.org' );
$reporter->addArg( 'sps', 'Comma separated list of SP containers to ping', 'mason.iu.xsede.org' );
$reporter->processArgv( @ARGV );
my $dir = $reporter->argValue( 'dir' );
my $sps = $reporter->argValue( 'sps' );

# Get a list of SP containers to ping
my @sps = split( /,/, $sps );
if ( @sps == 0 )
{
	$reporter->failPrintAndExit( 'No SP containers to ping.');
}

my $output = $reporter->loggedCommand( 'grid ls ' . $dir );
if ( $? )
{
	$reporter->failPrintAndExit( "\n Couldn't list $dir: $! $output\n" );
}

$output =~ s/^\s+|\s+$//g;
my @central_dirs = split /\n/, $output;
my $error = '';
pingContainers( $dir );
foreach my $central_dir ( @central_dirs )
{
	if ( grep( /^$central_dir$/, @sps ) )
	{
		pingContainers( $dir . '/' . $central_dir );
	}
}

sub pingContainers
{
	my $container_dir = shift;
	$container_dir .= '/containers';
	$output = $reporter->loggedCommand( 'grid ls ' . $container_dir );
	if ( $? )
	{
		$error .= "\n Couldn't list $container_dir: $! $output\n";
	}
	else
	{
		$output =~ s/^\s+|\s+$//g;
		my @containers = split /\n/, $output;
		my $pings = 0;
		my $failed_pings = 0;
		my $ping_errors = '';
		foreach my $container ( @containers )
		{
			if ( $container !~ m/:$/ )
			{
				my $ping_dir = $container_dir . '/' . $container;
				$pings++;
				$output = $reporter->loggedCommand( 'grid ping ' . $ping_dir );
				if ( $? )
				{
					$ping_errors .= "\n Couldn't ping container $ping_dir: $! $output\n";
					$failed_pings++;
				}
			}
		}
		my $successful_pings = $pings - $failed_pings;	
		if ( $pings == 0 )
		{
			$reporter->log( 'debug', 'No containers to ping in ' . $container_dir );
		}
		elsif ( $failed_pings == 0 )
		{
			$reporter->log( 'debug', 'Successfully pinged ' . $pings . ' containers in ' . $container_dir );
		}
		else
		{
			$error .= "Failed pinging $failed_pings of $pings containers in $container_dir: $ping_errors";
		}
	}
}

if ( $error ne '' ) 
{ 
	$reporter->failPrintAndExit( $error );
}
$reporter->unitSuccess();
$reporter->print();
exit;
