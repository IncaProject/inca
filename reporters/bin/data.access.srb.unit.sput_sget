#!/usr/bin/env perl

use strict;
use warnings;
use Inca::Reporter::SimpleUnit;

my $reporter = new Inca::Reporter::SimpleUnit(
  name => 'data.access.srb.unit.sput_sget',
  version => 6,
  description => 'This reporter tests data transfer via SRB',
  url => 'http://www.sdsc.edu/DICE/SRB',
  unit_name => 'sput_sget'
);
$reporter->processArgv(@ARGV);

my $MDIR = "$ENV{HOME}/.srb/srb_test.$$";
mkdir $MDIR || failClean("couldn't make $MDIR");
$reporter->tempFile($MDIR);

`cp $ENV{HOME}/.srb/.MdasEnv $MDIR/.MdasEnv.$$`;
`cp $ENV{HOME}/.srb/.MdasAuth $MDIR/.MdasAuth.$$`;
$ENV{"mdasEnvFile"} = "$MDIR/.MdasEnv.$$";
$ENV{"mdasAuthFile"} = "$MDIR/.MdasAuth.$$";

my $srbdir = "srb_test.$$";
my $srbfile = "$srbdir/srb.$$";
my $localsrc = "$MDIR/src.$$";
my $localdst = "$MDIR/dest.$$";

open(SRC, ">$localsrc");
  print SRC "Testing SRB put and get.$$";
close(SRC);
my $sinit = $reporter->loggedCommand("Sinit");
if ($?){
  failClean("Sinit failed: $sinit $!");
}
my $smkdir = $reporter->loggedCommand("Smkdir $srbdir");
if ($?){
  failClean("Smkdir failed: $smkdir $!");
}
my $sput = $reporter->loggedCommand("Sput $localsrc $srbfile");
if ($?){
  failClean("Sput failed: $sput $!");
}
my $sget = $reporter->loggedCommand("Sget $srbfile $localdst");
if ($?){
  failClean("Sget failed: $sget $!");
}
$reporter->unitSuccess();
$reporter->loggedCommand("Srm -r $srbdir");
$reporter->loggedCommand("Sexit");
$reporter->print();

sub failClean {
  my $err = shift;
  my $pid = $$;
  $err =~ s/$pid/PID/;
  $reporter->failPrintAndExit($err);
}
