package edu.sdsc.inca.util;

import junit.framework.TestCase;
import edu.sdsc.inca.ConfigurationException;
import edu.sdsc.inca.dataModel.util.Resource;
import edu.sdsc.inca.dataModel.util.Series;
import edu.sdsc.inca.dataModel.resourceConfig.ResourceConfigDocument;
import edu.sdsc.inca.protocol.Protocol;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.log4j.Logger;
import org.bouncycastle.jce.provider.BouncyCastleProvider;

import java.io.File;
import java.util.regex.Pattern;
import java.util.Vector;
import java.security.*;

/**
 * A tester class for ResourcesWrapper.  Tests constructor and getValue(s).
 * User: ssmallen
 */
public class ResourcesWrapperTest extends TestCase {
  static {
    Security.addProvider(new BouncyCastleProvider());
  }
  KeyPair keyPair = null;
  private static Logger logger = Logger.getLogger(ResourcesWrapperTest.class);


  /**
   * Returns a sample resource configuration file that can be used in tests.
   *
   * @return A ResourcesWrapper object containing sample resources
   *
   * @throws XmlException
   */
  public static ResourcesWrapper createSampleResources() throws XmlException {
    String globusDn = System.getProperty( "inca.test.globus.dn" );
    if ( globusDn == null ) {
      globusDn = "/C=US/ST=California/O=SDSC/CN=shavas-mac-2.local";
    }
    String resources =
      "<?xml version = \"1.0\"?>\n" +
      "<!--Generated by XML Authority.-->\n" +
      "<rc:resourceConfig xmlns:rc = \"http://inca.sdsc.edu/dataModel/resourceConfig_2.0\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" >\n" +
      "\n" +
      "<resources> \n" +
      "\n" +
      "  <resource>\n" +
      "    <name>teragrid</name>\n" +
      "    <xpath>//resource[name='sdsc' or name='ncsa' or name='localhost']</xpath>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>tgcpServers</name>\n" +
      "        <value>tg-gridftp.sdsc.teragrid.org -P 2812</value>\n" +
      "        <value>tg-gridftp.ncsa.teragrid.org -P 2812</value>\n" +
      "        <value>tg-gridftp.uc.teragrid.org -P 2812</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.PROXY_RENEW_MACRO + "</name>\n" +
      "        <value>no</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_HOST_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_PORT_MACRO + "</name>\n" +
      "        <value>7512</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_DN_MACRO + "</name>\n" +
      "        <value>" + globusDn + "</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_LIFETIME_MACRO + "</name>\n" +
      "        <value>5</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_PASSWORD_MACRO + "</name>\n" +
      "        <value>bree987</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.MYPROXY_USERNAME_MACRO + "</name>\n" +
      "        <value>test</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.FILE_PORT_MACRO + "</name>\n" +
      "        <value>2811</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>gridFtpPort2</name>\n" +
      "        <value>@" + Protocol.FILE_PORT_MACRO + "@</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>gridFtpPort3</name>\n" +
      "        <value>@gridFtpPort2@ @gridFtpPort2@</value>\n" +
      "        <value>@" + Protocol.FILE_PORT_MACRO + "@</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>dontuse</name>\n" +
      "        <value>this is bad @dontuse@</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>gramPort</name>\n" +
      "        <value>2119</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>abcMacro</name>\n" +
      "        <value>abc</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>myproxyServer</name>\n" +
      "        <value>myproxy.teragrid.org</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>myproxyCertPassword</name>\n" +
      "        <value>MyProxy_test</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>specialChars</name>\n" +
      "        <value>&lt;2&amp;</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>macroSpecialChars</name>\n" +
      "        <value>@specialChars@</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>pre</name>\n" +
      "        <value>bash --login -c 'export X509_USER_PROXY=@.incaProxy@;</value>\n"+
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>post</name>\n" +
      "        <value>'</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>__incaHosts__</name>\n" +
      "        <value>notimportant</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "    \n" +
      "  <resource>\n" +
      "  <name>sdsc</name>\n" +
      "  <xpath>//resource[matches(name, '^tg-login.sdsc.*$') or matches(name, '^.*sdsc.edu$')]</xpath>\n" +
      "  <macros>\n" +
      "    <macro>\n" +
      "      <name>emailContact</name>\n" +
      "      <value>admin@sdsc.edu</value>\n" +
      "    </macro>\n" +
      "  </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "  <name>tg-login.sdsc.teragrid.org</name>\n" +
      "  <xpath>//resource[matches(name, '^tg-login\\d.sdsc.*$')]</xpath>\n" +
      "  <macros>\n" +
      "    <macro>\n" +
      "      <name>gridServicesNode</name>\n" +
      "      <value>tg-login.sdsc.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "      <value>globus2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "      <value>/users/ssmallen/inca2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.FILE_SERVER_MACRO + "</name>\n" +
      "      <value>tg-login.sdsc.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.EQUIVALENT_MACRO + "</name>\n" +
      "      <value>true</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "      <value>tg-login1.sdsc.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>globusFlavors</name>\n" +
      "      <value>gcc64dbg</value>\n" +
      "      <value>vendorcc64dbg</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>abcMacro</name>\n" +
      "      <value>def</value>\n" +
      "    </macro>\n" +
      "  </macros>\n" +
      "</resource>\n" +
      "\n" +
      "  <resource>\n" +
      "  <name>tg-login1.sdsc.teragrid.org</name>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "  <name>tg-login2.sdsc.teragrid.org</name>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "  <name>tg-login3.sdsc.teragrid.org</name>\n" +
      "  </resource>\n" +
      "\n" +
      "<resource>\n" +
      "  <name>dslogin.sdsc.edu</name>\n" +
      "  <macros>\n" +
      "    <macro>\n" +
      "      <name>gridServicesNode</name>\n" +
      "      <value>dslogin.sdsc.edu</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "      <value>globus2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "      <value>/home/ssmallen/inca2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.FILE_PORT_MACRO + "</name>\n" +
      "      <value>2712</value>\n" +
      "    </macro>\n" +
      "  </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>ncsa</name>\n" +
      "    <xpath>//resource[matches(name, '^*.ncsa.*$')]</xpath>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "  <name>tg-login.ncsa.teragrid.org</name>\n" +
      "  <macros>\n" +
      "    <macro>\n" +
      "      <name>gridServicesNode</name>\n" +
      "      <value>tg-login1.ncsa.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "      <value>globus2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "      <value>/home/ncsa/ssmallen/inca2</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.FILE_SERVER_MACRO + "</name>\n" +
      "      <value>tg-login.ncsa.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "      <value>tg-login1.ncsa.teragrid.org</value>\n" +
      "    </macro>\n" +
      "    <macro>\n" +
      "      <name>emailContact</name>\n" +
      "      <value>admin@ncsa.uiuc.edu</value>\n" +
      "    </macro>\n" +
      "  </macros>\n" +
      "</resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>localhost</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>local</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.LOGIN_ID_MACRO + "</name>\n" +
      "        <value>ssmallen</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>gridServicesNode</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>verbose</name>\n" +
      "        <value>1</value>\n" +
      "      </macro>\n" +
        "    <macro>\n" +
        "      <name>emailContact</name>\n" +
        "      <value>admin@localhost</value>\n" +
        "    </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>localhost-noproxy</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>pre</name>\n" +
      "        <value>bash --login -c 'export X509_USER_PROXY=@.incaProxy@;</value>\n"+
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>post</name>\n" +
      "        <value>'</value>\n" +
      "      </macro>\n" + 
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>local</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.LOGIN_ID_MACRO + "</name>\n" +
      "        <value>ssmallen</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>gridServicesNode</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>verbose</name>\n" +
      "        <value>1</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>localhost-manual</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>manual</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.EMAIL_MACRO + "</name>\n" +
      "        <value>nobody@localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>verbose</name>\n" +
      "        <value>1</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>localhost-globus</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_PORT_MACRO + "</name>\n" +
      "        <value>2119</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>globus2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.FILE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.GRAM_DN_MACRO + "</name>\n" +
      "        <value>" + globusDn + "</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.GRIDFTP_DN_MACRO + "</name>\n" +
      "        <value>" + globusDn + "</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>localhost-noinstallation</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>ssh</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install8</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>fakeresource</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>ssh</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>fakeresource</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.LOGIN_ID_MACRO + "</name>\n" +
      "        <value>ssmallen</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "  <resource>\n" +
      "    <name>fakeresource2</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_SERVER_MACRO + "</name>\n" +
      "        <value>localhost</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_PORT_MACRO + "</name>\n" +
      "        <value>2119</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.COMPUTE_METHOD_MACRO + "</name>\n" +
      "        <value>globus2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.WORKING_DIR_MACRO + "</name>\n" +
      "        <value>/tmp/inca2install2</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>" + Protocol.FILE_SERVER_MACRO + "</name>\n" +
      "        <value>fakeHost</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "\n" +
      "</resources>\n" +
      "\n" +
      "</rc:resourceConfig>";
    ResourceConfigDocument doc=ResourceConfigDocument.Factory.parse(resources);
    return new ResourcesWrapper(doc);
  }

  /**
   * Test the constructor and save/read capabilities
   *
   * @throws Exception
   */
  public void testConstructorAndSave() throws Exception {
    ResourcesWrapper resources = new ResourcesWrapper();
    assertNotNull("resources not null", resources.getResourceConfigDocument());
    File file = new File( "/tmp/norepository.xml" );
    if ( file.exists() ) {
      file.delete();
    }

    // without encryption
    resources = new ResourcesWrapper(file.getAbsolutePath());
    Resource resource =
      resources.getResourceConfigDocument().getResourceConfig().getResources().
      addNewResource();
    resource.setName( "resourceA" );
    resources.save();
    ResourcesWrapper resources2 = new ResourcesWrapper(file.getAbsolutePath());
    String[] resourceNames = resources2.getResources( "resourceA", false  );
    assertEquals( "reloaded resources", 1, resourceNames.length );
    file.delete();

    // with encryption
    String passphrase = "SsshSecret";
    File encryptedFile = File.createTempFile( "resources", ".xml" );
    encryptedFile.delete();
    ResourcesWrapper encryptedResources = new ResourcesWrapper(
      encryptedFile.getAbsolutePath(), passphrase
    );
    encryptedResources.setResourceConfigDocument(
      ResourcesWrapperTest.createSampleResources().getResourceConfigDocument()
    );
    encryptedResources.save();
    ResourcesWrapper encryptedResources2 = new ResourcesWrapper(
      encryptedFile.getAbsolutePath(), passphrase
    );
    assertEquals(
      "reloaded resources",
      XmlWrapper.prettyPrint(encryptedResources.getResourceConfigDocument(), "  "),
      XmlWrapper.prettyPrint(encryptedResources2.getResourceConfigDocument(), "  ")
    );
    encryptedFile.delete();
  }

  /**
   * Test the ability to properly expand macros with $ in the value
   *
   * @throws Exception
   */
  public void testEnvironVars( ) throws Exception {
    String evilString = "<>&'\"$";
    assertEquals( "escaped string", "&lt;&gt;&amp;&apos;&quot;&#0036;",
                  XmlWrapper.escape(evilString) );
    String resourceXML =
      "<rc:resourceConfig xmlns:rc = \"http://inca.sdsc.edu/dataModel/resourceConfig_2.0\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" >\n" +
      "<resources>\n" +
      "  <resource>\n" +
      "    <name>cu12.ncsa.uiuc.edu</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>useEnvironVar</name>\n" +
      "        <value>${GLOBUS_LOCATION}</value>\n" +
      "        <value>$GLOBUS_LOCATION</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "</resources>\n" +
      "</rc:resourceConfig>\n";
    ResourceConfigDocument rcDoc = ResourceConfigDocument.Factory.parse(
      resourceXML
    );
    ResourcesWrapper resources = new ResourcesWrapper();
    resources.setResourceConfigDocument( rcDoc );
    String series =
      " <xml-fragment>\n" +
      "  <uri>http://inca.sdsc.edu/2.0/ctss/bin/grid.middleware.globus.unit.wsgram</uri>\n" +
      "  <args>\n" +
      "    <arg>\n" +
      "      <name>version</name>\n" +
      "      <value>no</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>verbose</name>\n" +
      "      <value>1</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>help</name>\n" +
      "      <value>no</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>log</name>\n" +
      "      <value>3</value>\n" +
      "    </arg>\n" +
       "    <arg>\n" +
      "      <name>var</name>\n" +
      "      <value>@useEnvironVar@</value>\n" +
      "    </arg>\n" +
      "  </args>\n" +
      "  <limits/>\n" +
      "  <description>wsgram</description>\n" +
      "  <hostname>cu12.ncsa.uiuc.edu</hostname>\n" +
      "</xml-fragment>";
    Vector results = resources.expand( series, "cu12.ncsa.uiuc.edu", null, new Vector<String>() );
    assertEquals( "2 report series extracted", 2, results.size() );
    logger.debug( (String)results.get(0) );
    Series rs1 = Series.Factory.parse( (String)results.get(0) );
    Series rs2 = Series.Factory.parse( (String)results.get(1) );
    assertEquals(
      "escaped worked",
      "${GLOBUS_LOCATION}",
      rs1.getArgs().getArgArray(4).getValue()
    );
    assertEquals(
      "escaped worked",
      "$GLOBUS_LOCATION",
      rs2.getArgs().getArgArray(4).getValue()
    );
  }

  /**
   * Test the ability to properly escape XML
   *
   * @throws Exception
   */
  public void testEscape( ) throws Exception {
    String evilString = "<>&'\"";
    assertEquals( "escaped string", "&lt;&gt;&amp;&apos;&quot;",
                  XmlWrapper.escape(evilString) );
    evilString = "soft add @globus-4.0 >&2";
    assertEquals( "escaped string", "soft add @globus-4.0 &gt;&amp;2",
                  XmlWrapper.escape(evilString) );
    String resourceXML =
      "<rc:resourceConfig xmlns:rc = \"http://inca.sdsc.edu/dataModel/resourceConfig_2.0\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" >\n" +
      "<resources>\n" +
      "  <resource>\n" +
      "    <name>cu12.ncsa.uiuc.edu</name>\n" +
      "    <macros>\n" +
      "      <macro>\n" +
      "        <name>softenv</name>\n" +
      "        <value>soft add +tgcp &gt;2&amp;</value>\n" +
      "      </macro>\n" +
      "      <macro>\n" +
      "        <name>softenvInclude</name>\n" +
      "        <value>@softenv@</value>\n" +
      "      </macro>\n" +
      "    </macros>\n" +
      "  </resource>\n" +
      "</resources>\n" +
      "</rc:resourceConfig>\n";
    ResourceConfigDocument rcDoc = ResourceConfigDocument.Factory.parse(
      resourceXML
    );
    ResourcesWrapper resources = new ResourcesWrapper();
    resources.setResourceConfigDocument( rcDoc );
    String series =
      " <xml-fragment>\n" +
      "  <uri>http://inca.sdsc.edu/2.0/ctss/bin/grid.middleware.globus.unit.wsgram</uri>\n" +
      "  <args>\n" +
      "    <arg>\n" +
      "      <name>version</name>\n" +
      "      <value>no</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>verbose</name>\n" +
      "      <value>1</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>help</name>\n" +
      "      <value>no</value>\n" +
      "    </arg>\n" +
      "    <arg>\n" +
      "      <name>log</name>\n" +
      "      <value>3</value>\n" +
      "    </arg>\n" +
      "  </args>\n" +
      "  <limits/>\n" +
      "  <context>@softenv@;@@;@softenvInclude@</context>\n" +
      "  <description>wsgram</description>\n" +
      "  <hostname>cu12.ncsa.uiuc.edu</hostname>\n" +
      "</xml-fragment>";
    Vector results = resources.expand( series, "cu12.ncsa.uiuc.edu", null, new Vector<String>() );
    assertEquals( "1 report series extracted", 1, results.size() );
    Series rs = Series.Factory.parse( (String)results.get(0) );
    assertTrue( "escaped worked", rs.getContext().startsWith("soft add +tgcp >2&") );
  }

  /**
   * Test ability to expand macros
   *
   * @throws Exception
   */
  public void testExpand() throws Exception {
    ResourcesWrapper resources = createSampleResources();
    Vector argValues = resources.expand(
      "no",
      "tg-login.sdsc.teragrid.org",
      null,
      new Vector<String>()
    );

    assertEquals( "no expansion", "no", (String)argValues.get(0) );

    argValues = resources.expand(
      "@pre@",
      "localhost",
      null,
      new Vector<String>()
    );
    assertEquals(
      "no expansion for proxy",
      "bash --login -c &apos;export X509_USER_PROXY=@.incaProxy@;",
      (String)argValues.get(0)
    );

    /************************************************************************/
    argValues = resources.expand(
      "no @globusFlavors@",
      "tg-login.sdsc.teragrid.org",
      null,
      new Vector<String>()
    );
    String[] shouldBe = new String[]{ "no gcc64dbg", "no vendorcc64dbg" };
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "one expansion", shouldBe[i], (String)argValues.get(i) );
    }

    /************************************************************************/
    argValues = resources.expand(
      "no @globusFlavors@ some text @tgcpServers@ end",
      "tg-login.sdsc.teragrid.org",
      null,
      new Vector<String>()
    );
    shouldBe = new String[]{
      "no gcc64dbg some text tg-gridftp.sdsc.teragrid.org -P 2812 end",
      "no gcc64dbg some text tg-gridftp.ncsa.teragrid.org -P 2812 end",
      "no gcc64dbg some text tg-gridftp.uc.teragrid.org -P 2812 end",
      "no vendorcc64dbg some text tg-gridftp.sdsc.teragrid.org -P 2812 end",
      "no vendorcc64dbg some text tg-gridftp.ncsa.teragrid.org -P 2812 end",
      "no vendorcc64dbg some text tg-gridftp.uc.teragrid.org -P 2812 end"
    };
    assertEquals("number of expansions correct", shouldBe.length, argValues.size() );
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "multi expansion", shouldBe[i], (String)argValues.get(i) );
    }

    /************************************************************************/
    Vector<String> targetResources = new Vector<String>();
    argValues = resources.expand(
      "@gridFtpPort3@",
      "tg-login.sdsc.teragrid.org",
      null,
      new Vector<String>()
    );
    shouldBe = new String[]{
      "2811 2811",
      "2811"
    };
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "recursive expansion", shouldBe[i], (String)argValues.get(i) );
    }
    assertEquals( "target resources is zero", 0, targetResources.size() );


    /************************************************************************/
    try {
      resources.expand(
        "@dontuse@",
        "tg-login.sdsc.teragrid.org",
        null,
        new Vector<String>()
      );
      fail( "Caught recursion on dontuse");
    } catch ( ConfigurationException e ) {
    }
    
    /***********************************************************************/
    //group expansion for a single resource
    targetResources = new Vector<String>();
    argValues = resources.expand(
      "no @tg-login.sdsc.teragrid.org->globusFlavors@",
      "notimportant",
      null,
      targetResources
    );
    shouldBe = new String[]{ "no gcc64dbg", "no vendorcc64dbg" };
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "one expansion", shouldBe[i], (String)argValues.get(i) );
    }
    assertEquals( "target resources right size", shouldBe.length, targetResources.size() );
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "correct target", "tg-login.sdsc.teragrid.org", targetResources.get(i) );
    }

    /***********************************************************************/
    // verify that multiple resource macros are expanded equally
    targetResources = new Vector<String>();
    argValues = resources.expand(
      "no @teragrid->__incaHosts__@ @teragrid->gramPort@ @teragrid->abcMacro@",
      "notimportant",
      null,
      targetResources
    );
    shouldBe = new String[] {
       "no tg-login1.sdsc.teragrid.org 2119 def",
       "no tg-login2.sdsc.teragrid.org 2119 def",
       "no tg-login3.sdsc.teragrid.org 2119 def",
       "no dslogin.sdsc.edu 2119 abc",
       "no tg-login.ncsa.teragrid.org 2119 abc",
       "no localhost 2119 abc"
    };
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "expansion is correct " + i, shouldBe[i], argValues.get(i));
    }

    /***********************************************************************/
    //group expansion with parent inheritance
    targetResources = new Vector<String>();
    argValues = resources.expand(
      "no @teragrid->abcMacro@ @abcMacro@",
      "tg-login.sdsc.teragrid.org",
      null,
      targetResources
    );
    shouldBe = new String[]{ 
    		"no def def",
    		"no abc def",
    		"no abc def",
    		"no abc def",
    		};
    assertEquals( "expansions are right size", shouldBe.length, argValues.size() );
    for( int i = 0; i < shouldBe.length; i++ ) {
       assertEquals( "one expansion " + i, shouldBe[i], (String)argValues.get(i) );
    }
    shouldBe = new String[] {
      "tg-login.sdsc.teragrid.org","dslogin.sdsc.edu",
      "tg-login.ncsa.teragrid.org", "localhost"
    };
    assertEquals( "target resources right size", shouldBe.length, targetResources.size() );
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "correct target", shouldBe[i], targetResources.get(i) );
    }

    /***********************************************************************/
    //bad arrow syntax case 1: invalid >
    targetResources = new Vector<String>();
    argValues = resources.expand(
      "@not-a>real-macro@",
      "tg-login.sdsc.teragrid.org",
      null,
      targetResources
    );
    assertEquals( "no expansion", "@not-a>real-macro@", (String)argValues.get(0) );
    assertEquals( "target resources is zero", 0, targetResources.size() );
    
    /***********************************************************************/
    //bad arrow syntex case 2: two ->
    argValues = resources.expand(
      "@nota->real->macro@",
      "tg-login.sdsc.teragrid.org",
      null,
      targetResources
    );
    assertEquals( "no expansion", "@nota->real->macro@", (String)argValues.get(0) );
    assertEquals( "target resources is zero", 0, targetResources.size() );
    
    /***********************************************************************/
    //special macro "incaHosts"
    argValues = resources.expand(
      "@gridFtpPort3@ @teragrid->__incaHosts__@",
      "tg-login.sdsc.teragrid.org",
      null,
      targetResources
    );
    shouldBe = new String[]{
      "2811 2811 tg-login1.sdsc.teragrid.org",
      "2811 2811 tg-login2.sdsc.teragrid.org",
      "2811 2811 tg-login3.sdsc.teragrid.org",
      "2811 tg-login1.sdsc.teragrid.org",
      "2811 tg-login2.sdsc.teragrid.org",
      "2811 tg-login3.sdsc.teragrid.org",
      "2811 2811 dslogin.sdsc.edu",
      "2811 dslogin.sdsc.edu",
      "2811 2811 tg-login.ncsa.teragrid.org",
      "2811 tg-login.ncsa.teragrid.org",
      "2811 2811 localhost",
      "2811 localhost"};
    for( int i = 0; i < shouldBe.length; i++ ) {
       assertEquals( "expansion" + i, shouldBe[i], (String)argValues.get(i) );
    }
    shouldBe = new String[]{
      "tg-login.sdsc.teragrid.org",
      "tg-login.sdsc.teragrid.org",
      "tg-login.sdsc.teragrid.org",
      "tg-login.sdsc.teragrid.org",
      "tg-login.sdsc.teragrid.org",
      "tg-login.sdsc.teragrid.org",
      "dslogin.sdsc.edu",
      "dslogin.sdsc.edu",
      "tg-login.ncsa.teragrid.org",
      "tg-login.ncsa.teragrid.org",
      "localhost",
      "localhost" };
    assertEquals( "target resources right size", shouldBe.length, targetResources.size() );
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "correct target " + i, shouldBe[i], targetResources.get(i) );
    }
    
  }

  /**
   * Test getResources
   */
  public void testGetResources() throws Exception {
    // round robin true
    ResourcesWrapper resources = createSampleResources();
    String[] resourceNames = resources.getResources(
      "tg-login.sdsc.teragrid.org", true
    );
    assertTrue( "one returned for roundrobin", resourceNames.length == 1 );
    assertTrue( "resource returned",
                resourceNames[0].equals("tg-login.sdsc.teragrid.org") );
    resourceNames = resources.getResources( "teragrid", true );
    String [] result = { "tg-login.sdsc.teragrid.org", "dslogin.sdsc.edu",
                         "tg-login.ncsa.teragrid.org", "localhost" };
    for ( int i = 0; i < result.length; i++ ) {
      assertEquals( "getResources works", result[i], resourceNames[i] );
    }

    // round robin false
    resourceNames = resources.getResources("tg-login.sdsc.teragrid.org", false);
    assertTrue( "3 returned for roundrobin", resourceNames.length == 3 );
    for ( int i = 0; i < resourceNames.length; i++ ) {
      assertTrue(
        "resource matched",
        Pattern.matches("^tg-login(1|2|3).sdsc.teragrid.org$", resourceNames[i])
      );
    }
    resourceNames = resources.getResources( "teragrid", false );
    result = new String[] { "tg-login1.sdsc.teragrid.org",
                            "tg-login2.sdsc.teragrid.org",
                            "tg-login3.sdsc.teragrid.org", "dslogin.sdsc.edu",
                            "tg-login.ncsa.teragrid.org", "localhost" };
    for ( int i = 0; i < result.length; i++ ) {
      assertEquals( "getResources works", result[i], resourceNames[i] );
    }
  }

  /**
   * Test getResources by xpath
   */
  public void testGetResourcesByXpath() throws Exception {
    ResourcesWrapper resources = createSampleResources();
    String[] resourceNames = resources.getResourcesByXpath(
      "//resource[name='ncsa']", true
    );
    assertEquals( "correct number returned", 1, resourceNames.length );
    assertEquals(
      "ncsa returned",
      "tg-login.ncsa.teragrid.org",
      resourceNames[0]
    );
  }

  /**
   * Test getValue[s]
   */
  public void testGetValues() throws Exception {
    ResourcesWrapper resources = createSampleResources();
    assertEquals(
      "Value exists only at resource",
      "/users/ssmallen/inca2",
      resources.getValue(
        "tg-login.sdsc.teragrid.org",
        Protocol.WORKING_DIR_MACRO
      )
    );

    assertEquals(
      "Value exists only at resource's ancestor",
      "2119",
      resources.getValue(
        "tg-login.sdsc.teragrid.org",
        "gramPort"
      )
    );

    assertEquals(
      "Resource's value takes precedence",
      "def",
      resources.getValue(
        "tg-login.sdsc.teragrid.org",
        "abcMacro"
      )
    );

    assertEquals(
      "Resource's value takes precedence",
      "2811",
      resources.getValue(
        "tg-login.sdsc.teragrid.org",
        "gridFtpPort2"
      )
    );


    String[] flavors = resources.getValues("tg-login.sdsc.teragrid.org",
                                           "globusFlavors" );
    String[] expectedFlavors = {"gcc64dbg", "vendorcc64dbg"};
    for ( int i = 0; i < expectedFlavors.length; i++ ) {
      assertEquals( "Multiple values " + i, expectedFlavors[i], flavors[i] );
    }

    assertNull(
      "Non-existent macro",
      resources.getValue(
        "tg-login.sdsc.teragrid.org",
        "idontexist"
      )
    );

    try {
      resources.getValue(
        "tg-login.dontexist.teragrid.org",
        "idontexist"
      );
      fail( "Non-existent resource doesn't cause exception" );
    } catch ( ConfigurationException e ) {}

    try {
      String duplicateMacros =
        "<?xml version = \"1.0\"?>\n" +
        "<!--Generated by XML Authority.-->\n" +
        "<rc:resourceConfig xmlns:rc = \"http://inca.sdsc.edu/dataModel/resourceConfig_2.0\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" >\n" +
        "\n" +
        "<resources> \n" +
        "\n" +
        "  <resource>\n" +
        "    <name>teragrid</name>\n" +
        "    <macros>\n" +
        "      <macro>\n" +
        "        <name>tgcpServer</name>\n" +
        "        <value>tg-gridftp.uc.teragrid.org -P 2812</value>\n" +
        "      </macro>\n" +
        "      <macro>\n" +
        "        <name>tgcpServer</name>\n" +
        "        <value>no</value>\n" +
        "      </macro>\n" +
        "    </macros>\n" +
        "  </resource>\n" +
        "</resources> \n";
      new ResourcesWrapper(
        ResourceConfigDocument.Factory.parse(duplicateMacros)
      ) ;
      fail( "Duplicate macro definitions not caught as exception" );
    } catch ( XmlException e ) {}

    try {
      String duplicateResources =
        "<?xml version = \"1.0\"?>\n" +
        "<!--Generated by XML Authority.-->\n" +
        "<rc:resourceConfig xmlns:rc = \"http://inca.sdsc.edu/dataModel/resourceConfig_2.0\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" >\n" +
        "\n" +
        "<resources> \n" +
        "\n" +
        "  <resource>\n" +
        "    <name>teragrid</name>\n" +
        "    <macros>\n" +
        "      <macro>\n" +
        "        <name>tgcpServer</name>\n" +
        "        <value>tg-gridftp.uc.teragrid.org -P 2812</value>\n" +
        "      </macro>\n" +
        "    </macros>\n" +
        "  </resource>\n" +
        "  <resource>\n" +
        "    <name>teragrid</name>\n" +
        "    <macros>\n" +
        "      <macro>\n" +
        "        <name>tgcpServer</name>\n" +
        "        <value>tg-gridftp.uc.teragrid.org -P 2812</value>\n" +
        "      </macro>\n" +
        "    </macros>\n" +
        "  </resource>\n" +
        "</resources> \n";
      new ResourcesWrapper(
        ResourceConfigDocument.Factory.parse(duplicateResources)
      ) ;
      fail( "Duplicate resource definitions not caught as exception" );
    } catch ( XmlException e ) {}
  }

  /**
   * Test getResources using host equivalence
   */
  public void testHostEquivalence() throws Exception {
    ResourcesWrapper resources = createSampleResources();
    assertTrue( "round robined resource", resources.hasHostEquivalence(
      "tg-login.sdsc.teragrid.org")
    );
    assertFalse( "round robined resource", resources.hasHostEquivalence(
      "tg-login1.sdsc.teragrid.org")
    );
    assertFalse( "round robined resource", resources.hasHostEquivalence(
      "teragrid")
    );

  }

  /**
   * Test that normalizing all macros into -> format and resolving the
   * resource groups to resources works
   *
   * @throws Exception  if problem running test
   */
  public void testNormalizeResources() throws Exception {
    ResourcesWrapper resources = createSampleResources();
    Vector<String> normalized = resources.normalizeResources(
      "@teragrid->abcMacro@ @teragrid->gramPort@ @ncsa->abcMacro@ @abcMacro@",
      "dslogin.sdsc.edu",
      new Vector<String>()
    );
    String[] shouldBe = {
      "@tg-login.sdsc.teragrid.org->abcMacro@ @tg-login.sdsc.teragrid.org->gramPort@ @tg-login.ncsa.teragrid.org->abcMacro@ @dslogin.sdsc.edu->abcMacro@",
      "@dslogin.sdsc.edu->abcMacro@ @dslogin.sdsc.edu->gramPort@ @tg-login.ncsa.teragrid.org->abcMacro@ @dslogin.sdsc.edu->abcMacro@",
      "@tg-login.ncsa.teragrid.org->abcMacro@ @tg-login.ncsa.teragrid.org->gramPort@ @tg-login.ncsa.teragrid.org->abcMacro@ @dslogin.sdsc.edu->abcMacro@",
      "@localhost->abcMacro@ @localhost->gramPort@ @tg-login.ncsa.teragrid.org->abcMacro@ @dslogin.sdsc.edu->abcMacro@"
    };
    for( int i = 0; i < shouldBe.length; i++ ) {
      assertEquals( "normalized " + i, shouldBe[i], normalized.get(i));
    }
  }

  /* Keeping around in case more optimizations are needed in expansion
  
  public void testTiming() throws Exception {
    long startTime = Calendar.getInstance().getTimeInMillis();
    ResourcesWrapper resources = new ResourcesWrapper( "resources.xml" );
       logger.debug(
      "Finished prep in " +
      (Calendar.getInstance().getTimeInMillis() - startTime) +
      " millis"
    );
    SuiteWrapper suite = new SuiteWrapper( "suite.xml" );
    Repository repo = new Repository( new URL("http://inca.sdsc.edu/2.0/ctssv3"));
    Repositories repos = new Repositories();
    repos.setRepositories( new Repository[]{ repo } );
    SuiteWrapperTest.resolveReporterNames( suite, repos );
    SuiteStagesWrapper suiteWrapper = new SuiteStagesWrapper( resources );
     startTime = Calendar.getInstance().getTimeInMillis();
    logger.debug( "Preparing to expand" );
    suiteWrapper.modify( suite );
    logger.debug(
      "Finished expanding in " +
      (Calendar.getInstance().getTimeInMillis() - startTime) +
      " millis"
    );
  }*/

}
