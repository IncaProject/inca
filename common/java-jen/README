
Inca 2.0 Java Commons README

CONTENTS
--------
Introduction
Installation Instructions
Documentation
Release Notes
Gotchas
Feedback
License

INTRODUCTION
------------
The Inca Java Commons include a set of libraries that are useful
in developing components for the Inca framework.

INSTALLATION
------------
Add the following jars to your classpath.  This can be done by copying
the jar files to your project, setting the system classpath to include
them or by coding the location of the jar files into your project build
file.  If you decide to move the files make sure to keep the license
information in your project.

+ inca-common.jar
+ lib/bcprov-jdk14-127.jar
+ lib/commons-cli-1.0.jar
+ lib/junit-3.8.1.jar
+ lib/log4j-1.2.8.jar

There are a few configuration files that some of the utilities require.
Samples can be found in the etc directory.  You can just add the etc
directory to your classpath to use these files or create your own files
and make sure that the directory you put the files appears in your classpath.
+ etc/log4j.properties  //configures the logging used in the libraries

All of the following are only useful for inca.net.Server -- ignore otherwise

+ etc/server.properties // configures the server. (comments inside sample file)
useful for testing __DO NOT USE IN PRODUCTION__

+ etc/servercert.pem    // sample cert
+ etc/serverkey.pem     // sample key - decrypted
+ etc/trusted           // sample cert files

DOCUMENTATION
-------------
Java docs can be generated by running
ant javadoc

RELEASE NOTES
-------------
This is the initial release of the utilities.

GOTCHAS
------------
+ Logging Error -- if you get the following error... you have a classpath
problem.
log4j:WARN No appenders could be found for logger (class [any class]).
log4j:WARN Please initialize the log4j system properly.

If you want to get rid of this error ( your code will run fine after it prints
out, but logging will not work) you need to add a log4j.properties file to your
classpath.  If in your classpath you see something like
/Path/to/etc/log4j.properties
the log4j.properties file IS NOT VISIBLE to you program.  Your classpath should
look like
/Path/to/etc
That makes all of the files in etc visible to your program.  Which is nice
for your certs, keys, trusted directory, and server.properties file.

+ Running Tests within IDE -- If you should decide to run the junit tests within
Eclipse or IntelliJ keep in mind that each test is NOT being run in a separate
fork.  This means that they all share System Properties and other attributes.
The preferred method for running Junit is on the command line using
ant run-tests.  Only report bugs that appear when tests are run that way.

+ Running Tests with ant -- Notice that in order to run the target run-tests
you are required to add the junit jar file to $ANT_HOME/lib.  If you would like
an explanation of why this is Necessary read
http://ant.apache.org/faq.html#delegating-classloader
The easiest way to deal with this is to use ant 1.6 and later and add the
jar to the lib directory.

FEEDBACK
--------
Please email inca@sdsc.edu with any suggestions/feedback on the libraries.

LICENSE
-------
The license for this code can be found in the COPYRIGHT.txt file in this
directory.
