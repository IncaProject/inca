<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
        targetNamespace = "http://inca.sdsc.edu/dataModel/util_2.0"
        xmlns:inca = "http://inca.sdsc.edu/dataModel/util_2.0"
        xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
        elementFormDefault = "unqualified">

  <!-- A description of the attempted invocation of a reporter, whether
       successful or not.  Note that all the fields are required.  If the
       execution failed, the component building the execution XML must generate
       its own report that indicates reporter failure. -->
  <complexType name = "reporterExecution">
    <sequence>
      <element name="resource" type = "string"/>
      <element name="context" type = "string"/>
      <element name="report" type = "inca:report"/>
      <element name="stderr" type = "string"/>
      <element name="sysusage" type = "inca:limits"/>
    </sequence>
  </complexType>

  <!-- the stdout produced by an Inca reporter -->
  <complexType name = "report">
    <sequence>
      <element name = "gmt" type = "dateTime"/>
      <element name = "hostname" type = "string"/>
      <element name = "name" type = "string"/>
      <element name = "version" type = "string"/>
      <element name = "workingDir" type = "string"/>
      <element name = "reporterPath" type = "string"/>
      <element name = "args" type = "inca:args"/>
      <element name = "log" type = "inca:log" minOccurs="0"/>
      <element name = "body" type = "inca:anyXmlSequence"/>
      <element name = "exitStatus" type = "inca:exitStatus"/>
      <element name = "help" minOccurs = "0">
        <complexType>
          <sequence>
            <element name = "reporter" type = "string"/>
            <element name = "version" type = "string"/>
            <element name = "description" type = "string"/>
            <element name = "url" type = "string"/>
            <element name = "argDescription" minOccurs = "0" maxOccurs = "unbounded">
              <complexType>
                <sequence>
                  <element name = "ID" type = "string"/>
                  <element name = "accepted" type = "string"/>
                  <element name = "description" type = "string"/>
                  <element name = "default" type = "string"/>
                </sequence>
              </complexType>
            </element>
            <element name = "dependency" minOccurs = "0" maxOccurs = "unbounded">
              <complexType>
                <sequence>
                  <element name = "ID" type = "string"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>

  <!-- series is a generic definition of the same concept from the depot.
       it describes all the necessary information that will make a series
       unique in the database with one exception.  We leave out the url of the
       machine that it is being executed on.   or actually we make it optional.
       If a document arrives at the depot with this info missing there will be
       an error -->
  <complexType name = "series">
    <sequence>
      <element name = "name" type = "string"/>
      <element name = "version" type = "string" minOccurs="0"/>
      <element name = "uri" type = "anyURI" minOccurs="0"/>
      <element name = "args" type = "inca:args" minOccurs = "0"/>
      <element name = "limits" type = "inca:limits" minOccurs = "0"/>
      <element name = "context" type = "string"/>
      <element name = "nice" type = "boolean" minOccurs = "0"/>
    </sequence>
  </complexType>

  <!-- seriesConfig describes the configuration of a report series on a 
       set of resources including the schedule information and acceptedOutput
       (i.e., any comparisons the depot should run upon receipt of a report.
       An action describes the addition or removal of the the series  -->
  <complexType name = "seriesConfig">
    <sequence>
      <element name = "series" type = "inca:series"/>
      <element name = "nickname" type = "string" minOccurs = "0"/>
      <choice>
        <element name = "resourceSetName" type = "string"/>
        <element name = "resourceXpath" type = "string"/>
        <element name = "resourceHostname" type = "string"/>
      </choice>
      <element name = "targetHostname" type = "string" minOccurs="0"/>
      <element name = "schedule" type = "inca:schedule"/>
      <element name = "acceptedOutput" type = "inca:acceptedOutput" minOccurs
= "0"/> 
      <element name = "action" type = "inca:action"/>
      <element name = "tags" type = "inca:tags" minOccurs = "0"/>
    </sequence>
  </complexType>

  <!-- args describes the input parameters to a reporter -->
  <complexType name = "args">
    <sequence>
      <element name = "arg" minOccurs = "0" maxOccurs = "unbounded">
        <complexType>
          <sequence>
            <element name = "name" type = "string"/>
            <element name = "value" type = "string"/>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  
  <!-- limits is used to express the ways that the reporter manager monitors
       the reporters' resource usage -->
  <complexType name = "limits">
    <sequence>
      <element name = "wallClockTime" type = "string" minOccurs = "0"/>
      <element name = "memory" type = "string" minOccurs = "0"/>
      <element name = "cpuTime" type = "string" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- schedule describes to the RM how often to run a reporter.  Currently we
       only support cron scheduling; the absence of a cron indicates that a
       series should be run once, immediately. -->
  <complexType name = "schedule">
    <sequence>
      <choice minOccurs = "0">
        <element name = "cron" type = "inca:cron"/>
        <element name = "crontime" type = "string"/>
      </choice>
      <element name = "numOccurs" type = "string" minOccurs = "0"/>
      <element name = "suspended" type = "boolean" minOccurs = "0"/>
    </sequence>
  </complexType>
  <complexType name = "cron">
    <sequence>
      <element name = "min" type = "string"/>
      <element name = "hour" type = "string"/>
      <element name = "mday" type = "string"/>
      <element name = "wday" type = "string"/>
      <element name = "month" type = "string"/>
    </sequence>
  </complexType>
  
  <!-- acceptedOutput (perhaps better named acceptableOutput) describes the
       "correct" output from a reporter and what to do on mismatch -->
  <complexType name = "acceptedOutput">
    <sequence>
      <element name = "comparitor" type = "string"/>
      <element name = "comparison" type = "string"/>
      <element name = "notifications" type = "inca:notifications" minOccurs = "0"/>
    </sequence>
  </complexType>
  <complexType name = "notifications">
    <sequence>
      <element name = "notification" minOccurs="0" maxOccurs="unbounded">
        <complexType>
          <sequence>
            <element name = "notifier" type = "string"/>
            <element name = "target" type = "string"/>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  <complexType name="tags">
    <sequence>
      <element name = "tag" type = "string" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>

  <!-- report log -->
  <complexType name = "log">
    <choice minOccurs = "0" maxOccurs = "unbounded">
      <element name = "debug" type = "inca:logEntry"/>
      <element name = "error" type = "inca:logEntry"/>
      <element name = "info" type = "inca:logEntry"/>
      <element name = "system" type = "inca:logEntry"/>
      <element name = "warn" type = "inca:logEntry"/>
    </choice>
  </complexType>
  <complexType name = "logEntry">
    <sequence>
      <element name = "gmt" type = "dateTime"/>
      <element name = "message" type = "string"/>
    </sequence>
  </complexType>

  <!-- a flexible type that allows a sequence of any XML content -->
  <complexType name = "anyXmlSequence">
    <sequence>
      <any namespace = "##any" processContents = "skip" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "exitStatus">
    <sequence>
      <element name = "completed" type = "boolean"/>
      <element name = "errorMessage" type = "string" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- descriptions of single resource/named resource groups and the macro
       definitions that apply to each -->
  <complexType name = "resources">
    <sequence>
      <element name = "resource" type = "inca:resource" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "resource">
    <sequence>
      <element name = "name" type = "string"/>
      <element name = "xpath" type = "string" minOccurs = "0"/>
      <element name = "macros" type = "inca:macros" minOccurs = "0">
        <unique name = "macro">
          <selector xpath = "macro"/>
          <field xpath = "name"/>
        </unique>
      </element>
    </sequence>
  </complexType>
  <complexType name = "macros">
    <sequence>
      <element name = "macro" type = "inca:macro" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "macro">
    <sequence>
      <element name = "name" type = "string"/>
      <element name = "value" type = "string" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>

  <!-- actions taken when modifying the resourceSetConfigs in a suite -->
  <simpleType name = "action">
    <restriction base = "token">
      <pattern value = "add|delete|none"/>
    </restriction>
  </simpleType>

  <!-- reportDetails includes a single report instance and its
       related configuration and runtime information -->
  <complexType name="reportDetails">
    <sequence>
      <element name = "suiteId" type = "long" minOccurs="1" maxOccurs="unbounded"/>
      <element name = "seriesConfigId" type = "long"/>
      <element name = "seriesId" type = "long"/>
      <element name = "reportId" type = "long"/>
      <element name = "instanceId" type = "long"/>
      <element name = "seriesConfig" type = "inca:seriesConfig"/>
      <element name = "report" type = "inca:report"/>
      <element name = "comparisonResult" type = "string" minOccurs = "0"/>
      <element name = "sysusage" type = "inca:limits"/>
      <element name = "stderr" type = "string" minOccurs = "0"/>
    </sequence>
  </complexType>

  <!-- seriesHistory summarizes series successes and failures over a
       specified period -->
  <complexType name="seriesHistory">
    <sequence>
      <element name="series">
        <complexType>
          <sequence>
            <element name = "guid" type = "string" minOccurs="1" maxOccurs="unbounded"/>
            <element name = "nickname" type = "string"/>
            <element name = "resource" type = "string"/>
            <element name="period" minOccurs="0" maxOccurs="unbounded">
              <complexType>
                <sequence>
                  <element name = "begin" type = "long"/>
                  <element name = "end" type = "long"/>
                  <element name = "successes" type = "long"/>
                  <element name = "failure"
                           minOccurs = "0" maxOccurs = "unbounded">
                    <complexType>
                      <sequence>
                        <element name="message" type = "string"/>
                        <element name="count" type = "long"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>

</schema>
